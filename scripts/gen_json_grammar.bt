// This file is part of vscode-vba.
// Copyright (c) 2023-present Lukas Neubert.
// This Source Code is subject to the terms of the Mozilla Public License 2.0.

package main

import os
import bait.util

const GIT_USER := 'tiabeast-bot'
const GIT_MAIL := '131296262+tiabeast-bot@users.noreply.github.com'
const REPO_DIR := '/tmp/vscode-vba-json'

const DRY_RUN := os.user_args().contains('--dry')
const IS_CI := os.getenv('CI') == 'true'

fun main() {
	// Count the number of errors by adding the os.system return values
	mut errors := 0

	if IS_CI {
		println('Configuring git user...')
		errors += git_command('config --global user.name "${GIT_USER}"')
		errors += git_command('config --global user.email "${GIT_MAIL}"')
	}

	if os.exists(REPO_DIR) {
		os.rmdir_all(REPO_DIR)
	}

	// Clone repo as bot user
	access_token := os.getenv('BOT_TOKEN')
	errors += git_command('clone --depth 1 https://${GIT_USER}:${access_token}@github.com/tiabeast/vscode-vba-json.git ${REPO_DIR}')

	// Run conversion
	errors += os.system('npm run convert-yaml')

	// Copy grammar files
	println('Copying grammar files...')
	copy_grammar('vba', 1500)
	copy_grammar('wwb', 100)

	// Stage changes
	errors += git_command('-C ${REPO_DIR} add .')

	// Exit if there is nothing to commit
	has_changes := git_command('-C ${REPO_DIR} diff-index --quiet HEAD')
	if has_changes == 0 {
		println('No changes to commit.')
		exit(0)
	}

	// Create commit
	println('Creating commit...')
	os.chdir(REPO_DIR)
	commit_msg := 'update grammars'
	errors += git_command('commit -m "${commit_msg}"')

	// Safety rebase and push changes
	if not DRY_RUN {
		println('Pushing changes...')
		errors += git_command('pull --rebase')
		errors += git_command('push')
	}

	// Exit with the number of errors
	exit(errors)
}

fun copy_grammar(lang string, min_size i32) {
	src := './out/${lang}.tmGrammar.json'

	// Sanity check for a reasonable file size
	text := os.read_file(src)
	if text.length < min_size {
		eprintln('error: Grammar for ${lang} is too small.')
		exit(1)
	}

	// Copy
	os.cp(src, '${REPO_DIR}/syntaxes/${lang}.tmGrammar.json')
}

fun git_command(cmd string) i32 {
	esc_cmd := util.shell_escape(cmd)
	return os.system('git ${esc_cmd}')
}
